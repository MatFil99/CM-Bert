import itertools

def get_singlerun_configuration(
    # default run configuration
    # dataset,
    model_name='cmbert',
    encoder_checkpoint='distilbert/distilbert-base-uncased',
    # load_pretrained=False,
    hidden_dropout_prob=0.2,
    modality_att_dropout_prob=0.3,
    # freeze_params=True,
    freeze_params_layers=11, 
    hidden_size=768,
    projection_size=30,
    num_labels=2,
    batch_size=8,
    num_epochs=3,
    patience=3,
    chunk_size=None,
    wwm_probability=0.2,
    criterion='crossentropyloss',
    optimizer='adamw',
    layer_specific_optimization=True,
    lr=2e-5,
    scheduler_type='linear',
    warmup_steps_ratio=0.0,
    best_model_metric='accuracy',
    save_best_model=False,
    save_model_dest='models/'
):
    return (
        model_name,
        encoder_checkpoint,
        # load_pretrained,
        hidden_dropout_prob,
        modality_att_dropout_prob,
        freeze_params_layers,
        hidden_size,
        projection_size,
        num_labels,
        batch_size,
        num_epochs,
        patience,
        chunk_size,
        wwm_probability,
        criterion,
        optimizer,
        layer_specific_optimization,
        lr,
        scheduler_type,
        warmup_steps_ratio,
        best_model_metric,
        save_best_model,
        save_model_dest,
    )


def get_multirun_configuration(
        dataset,
        text_features,
        # audio_features,
        # visual_features,
        model_name,
        encoder_checkpoint,
        hidden_dropout_prob,
        modality_att_dropout_prob,
        freeze_params_layers,
        hidden_size,
        projection_size,
        batch_size,
        num_epochs,
        patience,
        criterion,
        optimizer,
        layer_specific_optimization,
        lr,
        scheduler_type,
        warmup_steps_ratio,
        best_model_metric,
        save_best_model,
        save_model_dest,
        wwm_probability=[0.15],
        chunk_size=[128],
        num_labels=[2],
):
    runs_configuration = set(itertools.product(*[
        text_features,
        # audio_features,
        # visual_features,
        model_name,
        encoder_checkpoint,
        # load_pretrained,
        hidden_dropout_prob,
        modality_att_dropout_prob,
        # freeze_params,
        freeze_params_layers,
        hidden_size,
        projection_size,
        num_labels,
        batch_size,
        num_epochs,
        patience,
        chunk_size,
        wwm_probability,
        criterion,
        optimizer,
        layer_specific_optimization,
        lr,
        scheduler_type,
        warmup_steps_ratio,
        best_model_metric,
        save_best_model,
        save_model_dest
    ]))

    return runs_configuration, dataset

